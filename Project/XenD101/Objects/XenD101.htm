<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\XenD101.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\XenD101.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Aug 19 15:38:24 2021
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; CmdProc_Recv &rArr; CmdProcess &rArr; CmdExec &rArr; System_Reconfig &rArr; DataProc_NeedReconfig &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from mm32_it.o(i.BusFault_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from mm32_it.o(i.DebugMon_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[e]">EXTI0_1_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[f]">EXTI2_3_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[10]">EXTI4_15_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[c]">FLASH_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from mm32_it.o(i.HardFault_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[16]">I2C1_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from mm32_it.o(i.MemManage_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from mm32_it.o(i.NMI_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from mm32_it.o(i.PendSV_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[d]">RCC_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[17]">SPI1_IRQHandler</a> from mm32_it.o(i.SPI1_IRQHandler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from mm32_it.o(i.SVC_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from mm32_it.o(i.SysTick_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[1b]">SystemInit</a> from system_mm32f0010.o(i.SystemInit) referenced from startup_mm32f0010_keil.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[12]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[14]">TIM3_IRQHandler</a> from mm32_it.o(i.TIM3_IRQHandler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from mm32_it.o(i.UART1_IRQHandler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[19]">UART2_IRQHandler</a> from startup_mm32f0010_keil.o(.text) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from mm32_it.o(i.UsageFault_Handler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[a]">WWDG_IWDG_IRQHandler</a> from mm32_iwdg.o(i.WWDG_IWDG_IRQHandler) referenced from startup_mm32f0010_keil.o(RESET)
 <LI><a href="#[1c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f0010_keil.o(.text)
 <LI><a href="#[1d]">fputc</a> from mm32_uart.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[1a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ea]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[eb]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ec]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ed]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0010_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[ee]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataReceived
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChirpIndex
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_Init
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCopy
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCmdAck
</UL>

<P><STRONG><a name="[ef]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[f1]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_NeedReconfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_Init
</UL>

<P><STRONG><a name="[f3]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDfftPeakData
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
</UL>

<P><STRONG><a name="[f5]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f7]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[24]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[f8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[f9]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[fa]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>ABD_GetParaAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abd.o(i.ABD_GetParaAddr))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[5d]"></a>ABD_GetParaLen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abd.o(i.ABD_GetParaLen))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[2f]"></a>ABD_HumanPresenceSensing</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, abd.o(i.ABD_HumanPresenceSensing))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ABD_HumanPresenceSensing &rArr; GetRangeByCenterGravity &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOn
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOff
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsp
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDfftPeakData
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAlgorithm
</UL>

<P><STRONG><a name="[37]"></a>ABD_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, abd.o(i.ABD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ABD_Init &rArr; TspiIoInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TspiIoInit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOff
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>ABD_ParaUpdate</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, abd.o(i.ABD_ParaUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ABD_ParaUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rangeGearParaUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CmdProc_AdcReset</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, cmdprocess.o(i.CmdProc_AdcReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CmdProc_AdcReset &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateTail3Parse
</UL>

<P><STRONG><a name="[70]"></a>CmdProc_InCmdMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cmdprocess.o(i.CmdProc_InCmdMode))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[4e]"></a>CmdProc_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cmdprocess.o(i.CmdProc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CmdProc_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>CmdProc_Recv</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, cmdprocess.o(i.CmdProc_Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CmdProc_Recv &rArr; CmdProcess &rArr; CmdExec &rArr; System_Reconfig &rArr; DataProc_NeedReconfig &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>ConfigDfftPeakPara</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, radar.o(i.ConfigDfftPeakPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ConfigDfftPeakPara &rArr; I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[52]"></a>Config_EarseFlashData</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, config.o(i.Config_EarseFlashData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Config_EarseFlashData &rArr; Flash_ErasePage &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
</UL>

<P><STRONG><a name="[4a]"></a>Config_GetSN</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, config.o(i.Config_GetSN))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[54]"></a>Config_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, config.o(i.Config_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Config_Init &rArr; Config_RetrieveFlashData &rArr; Config_WriteData2Flash &rArr; Flash_Program &rArr; FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_ParaInit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_GetSysParaLen
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_GetSysParaAddr
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetRadarParaLen
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetRadarParaAddr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEAK_GetSysParaLen
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEAK_GetSysParaAddr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_GetParaLen
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_GetParaAddr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_RetrieveFlashData
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>Config_NeedFlashWrite</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, config.o(i.Config_NeedFlashWrite))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_UpdateReg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
</UL>

<P><STRONG><a name="[5f]"></a>Config_RetrieveFlashData</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, config.o(i.Config_RetrieveFlashData))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Config_RetrieveFlashData &rArr; Config_WriteData2Flash &rArr; Flash_Program &rArr; FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_WriteData2Flash
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[42]"></a>Config_SavePara2Flash</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, config.o(i.Config_SavePara2Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Config_SavePara2Flash &rArr; Config_WriteData2Flash &rArr; Flash_Program &rArr; FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_WriteData2Flash
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[60]"></a>Config_WriteData2Flash</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, config.o(i.Config_WriteData2Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Config_WriteData2Flash &rArr; Flash_Program &rArr; FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_RetrieveFlashData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_SavePara2Flash
</UL>

<P><STRONG><a name="[d0]"></a>DataProc_GetRadarDataLen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dataprocess.o(i.DataProc_GetRadarDataLen))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reconfig
</UL>

<P><STRONG><a name="[69]"></a>DataProc_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, dataprocess.o(i.DataProc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DataProc_Init &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>DataProc_NeedReconfig</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, dataprocess.o(i.DataProc_NeedReconfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DataProc_NeedReconfig &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reconfig
</UL>

<P><STRONG><a name="[6d]"></a>DataProc_Recv</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dataprocess.o(i.DataProc_Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DataProc_Recv &rArr; DataProcess &rArr; DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>DataProc_Send</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dataprocess.o(i.DataProc_Send))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>Delay</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, platform.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[e2]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IWDG_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
</UL>

<P><STRONG><a name="[7e]"></a>FLASH_ErasePage</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, hal_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
</UL>

<P><STRONG><a name="[82]"></a>FLASH_GetStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[85]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
</UL>

<P><STRONG><a name="[80]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hal_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
</UL>

<P><STRONG><a name="[81]"></a>FLASH_ProgramWord</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, hal_flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program
</UL>

<P><STRONG><a name="[83]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Program
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ErasePage
</UL>

<P><STRONG><a name="[7f]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>

<P><STRONG><a name="[53]"></a>Flash_ErasePage</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mm32_flash.o(i.Flash_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flash_ErasePage &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_WriteData2Flash
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_EarseFlashData
</UL>

<P><STRONG><a name="[61]"></a>Flash_Program</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, mm32_flash.o(i.Flash_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Flash_Program &rArr; FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_WriteData2Flash
</UL>

<P><STRONG><a name="[95]"></a>GPIO_Init</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TspiIoInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutInit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_GPIO_SlaveInit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[94]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_GPIO_SlaveInit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[af]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOff
</UL>

<P><STRONG><a name="[b0]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOn
</UL>

<P><STRONG><a name="[ae]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TspiIoInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutInit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_GPIO_SlaveInit
</UL>

<P><STRONG><a name="[32]"></a>GetRangeByCenterGravity</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, abd.o(i.GetRangeByCenterGravity))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GetRangeByCenterGravity &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[8d]"></a>HAL_I2C_Init</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_I2C_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterModeInit
</UL>

<P><STRONG><a name="[8f]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal_spi.o(i.HAL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SPI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DeInit
</UL>

<P><STRONG><a name="[c8]"></a>HAL_SPI_Init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[91]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>I2C_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetDeviceAddr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterModeInit
</UL>

<P><STRONG><a name="[9e]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[96]"></a>I2C_GetConfigBySpeed</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mm32_i2c.o(i.I2C_GetConfigBySpeed))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[9d]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[9f]"></a>I2C_GetITStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[92]"></a>I2C_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, mm32_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2C_Init &rArr; I2C_MasterModeInit &rArr; HAL_I2C_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetDeviceAddr
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterModeInit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetConfigBySpeed
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[97]"></a>I2C_MasterModeInit</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, mm32_i2c.o(i.I2C_MasterModeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_MasterModeInit &rArr; HAL_I2C_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_StructInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[4d]"></a>I2C_Read</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, mm32_i2c.o(i.I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadCmd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetRawPoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetOneFrameChirpNum
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetFftPoint
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDfftPeakSize
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDataType
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWriteReg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadReg
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DumpChipRegValue
</UL>

<P><STRONG><a name="[a0]"></a>I2C_ReadCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_ReadCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[a1]"></a>I2C_ReceiveData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[a2]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetDeviceAddr
</UL>

<P><STRONG><a name="[9c]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[98]"></a>I2C_SetDeviceAddr</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, mm32_i2c.o(i.I2C_SetDeviceAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_SetDeviceAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[9a]"></a>I2C_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_i2c.o(i.I2C_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterModeInit
</UL>

<P><STRONG><a name="[4c]"></a>I2C_Write</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, mm32_i2c.o(i.I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_PreInit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterPDMode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWriteReg
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterNormalMode
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDfftPeakPara
</UL>

<P><STRONG><a name="[ac]"></a>IWDG_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[b1]"></a>IWDG_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVU_CheckStatus
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVU_CheckStatus
</UL>

<P><STRONG><a name="[a3]"></a>IWDG_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, mm32_iwdg.o(i.IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IWDG_Init &rArr; IWDG_SetReload &rArr; RVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVU_CheckStatus
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVU_CheckStatus
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[6f]"></a>IWDG_Reload</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mm32_iwdg.o(i.IWDG_Reload))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_Reload
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[ab]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Reload
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[a8]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, hal_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_SetPrescaler &rArr; PVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVU_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[aa]"></a>IWDG_SetReload</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, hal_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_SetReload &rArr; RVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVU_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[a7]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IWDG_IRQHandler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[3f]"></a>Indicator_RadarDataIndexError</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, platform.o(i.Indicator_RadarDataIndexError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Indicator_RadarDataIndexError
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChirpIndex
</UL>

<P><STRONG><a name="[71]"></a>Indicator_RadarDataReceived</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, platform.o(i.Indicator_RadarDataReceived))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Indicator_RadarDataReceived &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[38]"></a>IoOutInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mm32_gpio.o(i.IoOutInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IoOutInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
</UL>

<P><STRONG><a name="[35]"></a>IoOutOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mm32_gpio.o(i.IoOutOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IoOutOff
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[34]"></a>IoOutOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mm32_gpio.o(i.IoOutOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IoOutOn
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[b5]"></a>LED_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_gpio.o(i.LED_Init))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[bf]"></a>LED_On</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_gpio.o(i.LED_On))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
</UL>

<P><STRONG><a name="[ad]"></a>LED_Toggle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_gpio.o(i.LED_Toggle))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataReceived
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataIndexError
</UL>

<P><STRONG><a name="[74]"></a>MTT_ParaRead</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cmdprocess.o(i.MTT_ParaRead))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadPara
</UL>

<P><STRONG><a name="[78]"></a>MTT_ParaUpdate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cmdprocess.o(i.MTT_ParaUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>NVIC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>

<P><STRONG><a name="[5a]"></a>PEAK_GetSysParaAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, radar.o(i.PEAK_GetSysParaAddr))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[5b]"></a>PEAK_GetSysParaLen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, radar.o(i.PEAK_GetSysParaLen))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[76]"></a>PEAK_ParaRead</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, radar.o(i.PEAK_ParaRead))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadPara
</UL>

<P><STRONG><a name="[7b]"></a>PEAK_ParaUpdate</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, radar.o(i.PEAK_ParaUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PEAK_ParaUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
</UL>

<P><STRONG><a name="[a6]"></a>PVU_CheckStatus</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, hal_iwdg.o(i.PVU_CheckStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>Platform_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, platform.o(i.Platform_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Platform_Init &rArr; I2C_Init &rArr; I2C_MasterModeInit &rArr; HAL_I2C_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TspiIoInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutInit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[99]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_GPIO_SlaveInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterModeInit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>

<P><STRONG><a name="[90]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[a5]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[b7]"></a>RCC_GetHCLKFreq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_GetHCLKFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[8e]"></a>RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[b8]"></a>RCC_GetSysClockFreq</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[a4]"></a>RCC_LSICmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_LSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[a9]"></a>RVU_CheckStatus</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, hal_iwdg.o(i.RVU_CheckStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[b9]"></a>Radar_EnterNormalMode</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, radar.o(i.Radar_EnterNormalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Radar_EnterNormalMode &rArr; I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[ba]"></a>Radar_EnterPDMode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, radar.o(i.Radar_EnterPDMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Radar_EnterPDMode &rArr; I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAlgorithm
</UL>

<P><STRONG><a name="[86]"></a>Radar_GetDataType</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, radar.o(i.Radar_GetDataType))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[89]"></a>Radar_GetDfftPeakSize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, radar.o(i.Radar_GetDfftPeakSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Radar_GetDfftPeakSize &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[88]"></a>Radar_GetFftPoint</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, radar.o(i.Radar_GetFftPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Radar_GetFftPoint &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[8a]"></a>Radar_GetOneFrameChirpNum</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, radar.o(i.Radar_GetOneFrameChirpNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Radar_GetOneFrameChirpNum &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[55]"></a>Radar_GetRadarParaAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, radar.o(i.Radar_GetRadarParaAddr))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[56]"></a>Radar_GetRadarParaLen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radar.o(i.Radar_GetRadarParaLen))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[87]"></a>Radar_GetRawPoint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, radar.o(i.Radar_GetRawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Radar_GetRawPoint &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[bc]"></a>Radar_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, radar.o(i.Radar_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Radar_Init &rArr; DumpChipRegValue &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterNormalMode
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDfftPeakPara
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceSpecialRegs
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DumpChipRegValue
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be]"></a>Radar_PreInit</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, radar.o(i.Radar_PreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Radar_PreInit &rArr; I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>Radar_UpdateReg</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, radar.o(i.Radar_UpdateReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Radar_UpdateReg
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_NeedFlashWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWriteReg
</UL>

<P><STRONG><a name="[5e]"></a>RunFailed</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, utilities.o(i.RunFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RunFailed &rArr; Config_EarseFlashData &rArr; Flash_ErasePage &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_EarseFlashData
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_NeedReconfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_RetrieveFlashData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[17]"></a>SPI1_IRQHandler</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, mm32_it.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetITStatus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetFlagStatus
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_BiDirectionalLineConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[c4]"></a>SPI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[c5]"></a>SPI_DeInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, mm32_spi.o(i.SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_DeInit &rArr; HAL_SPI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reconfig
</UL>

<P><STRONG><a name="[c3]"></a>SPI_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[c1]"></a>SPI_GetITStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>SPI_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[6b]"></a>SPI_Init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, mm32_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SPI_Init &rArr; SPI1_GPIO_SlaveInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_StructInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ITConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BiDirectionalLineConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_GPIO_SlaveInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reconfig
</UL>

<P><STRONG><a name="[c2]"></a>SPI_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[c7]"></a>SPI_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>SYSTICK_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mm32_systick.o(i.SYSTICK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SYSTICK_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[72]"></a>StartAlgorithm</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dataprocess.o(i.StartAlgorithm))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = StartAlgorithm &rArr; ABD_HumanPresenceSensing &rArr; GetRangeByCenterGravity &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterPDMode
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mm32_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RecvTimeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SystemInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, system_mm32f0010.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo48_HSI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>System_GetSysParaAddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system.o(i.System_GetSysParaAddr))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[59]"></a>System_GetSysParaLen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system.o(i.System_GetSysParaLen))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[57]"></a>System_ParaInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system.o(i.System_ParaInit))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
</UL>

<P><STRONG><a name="[75]"></a>System_ParaRead</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system.o(i.System_ParaRead))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadPara
</UL>

<P><STRONG><a name="[79]"></a>System_ParaUpdate</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, system.o(i.System_ParaUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
</UL>

<P><STRONG><a name="[43]"></a>System_Reconfig</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system.o(i.System_Reconfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = System_Reconfig &rArr; DataProc_NeedReconfig &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DeInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_NeedReconfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_GetRadarDataLen
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[d1]"></a>TIM3_Disable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mm32_systick.o(i.TIM3_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[bb]"></a>TIM3_Enable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mm32_systick.o(i.TIM3_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterPDMode
</UL>

<P><STRONG><a name="[14]"></a>TIM3_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mm32_it.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIM3_IRQHandler &rArr; Radar_EnterNormalMode &rArr; I2C_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Disable
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterNormalMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>TIM3_Init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, mm32_systick.o(i.TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM3_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[d6]"></a>TIM_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>

<P><STRONG><a name="[d3]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Disable
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Enable
</UL>

<P><STRONG><a name="[d7]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>

<P><STRONG><a name="[d5]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hal_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>

<P><STRONG><a name="[d4]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>

<P><STRONG><a name="[39]"></a>TspiIoInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mm32_gpio.o(i.TspiIoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TspiIoInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
</UL>

<P><STRONG><a name="[d8]"></a>UART1_GPIO_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mm32_uart.o(i.UART1_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART1_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mm32_it.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler &rArr; UART_Recv
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Recv
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[e0]"></a>UART_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[3d]"></a>UART_DirectSend</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, mm32_uart.o(i.UART_DirectSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_DirectSend
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AckSend
</UL>

<P><STRONG><a name="[dd]"></a>UART_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DirectSend
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[d9]"></a>UART_GetITStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>UART_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[b6]"></a>UART_Init</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, mm32_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_Init &rArr; UART1_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[e1]"></a>UART_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Recv
</UL>

<P><STRONG><a name="[db]"></a>UART_Recv</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mm32_uart.o(i.UART_Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Recv
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>UART_RecvTimeout</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mm32_uart.o(i.UART_RecvTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[dc]"></a>UART_SendData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_uart.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DirectSend
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[de]"></a>UART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IWDG_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, mm32_iwdg.o(i.WWDG_IWDG_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WWDG_IWDG_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0010_keil.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[fd]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[36]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_RetrieveFlashData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DumpChipRegValue
</UL>

<P><STRONG><a name="[41]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cmdprocess.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEAK_ParaUpdate
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[fe]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ff]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[100]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[73]"></a>delay_1ms</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mm32_systick.o(i.delay_1ms))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[cd]"></a>delay_decrement</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mm32_systick.o(i.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1d]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, mm32_uart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[33]"></a>lsp</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, abd.o(i.lsp))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[1a]"></a>main</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; CmdProc_Recv &rArr; CmdProcess &rArr; CmdExec &rArr; System_Reconfig &rArr; DataProc_NeedReconfig &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_PreInit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Send
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Recv
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_Recv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[3b]"></a>rangeGearParaUpdate</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, abd.o(i.rangeGearParaUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_ParaUpdate
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3c]"></a>AckSend</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cmdprocess.o(i.AckSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AckSend &rArr; UART_DirectSend
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DirectSend
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[40]"></a>CmdExec</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, cmdprocess.o(i.CmdExec))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = CmdExec &rArr; System_Reconfig &rArr; DataProc_NeedReconfig &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reconfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_SavePara2Flash
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_GetSN
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCmdAck
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWriteReg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadReg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadPara
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AckSend
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess
</UL>

<P><STRONG><a name="[50]"></a>CmdProcess</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, cmdprocess.o(i.CmdProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = CmdProcess &rArr; CmdExec &rArr; System_Reconfig &rArr; DataProc_NeedReconfig &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_Recv
</UL>

<P><STRONG><a name="[49]"></a>DoReadPara</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, cmdprocess.o(i.DoReadPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DoReadPara &rArr; FillCmdAck
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTT_ParaRead
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_ParaRead
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEAK_ParaRead
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[47]"></a>DoReadReg</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, cmdprocess.o(i.DoReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DoReadReg &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[48]"></a>DoWritePara</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, cmdprocess.o(i.DoWritePara))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DoWritePara &rArr; FillCmdAck
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MTT_ParaUpdate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_ParaUpdate
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEAK_ParaUpdate
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_NeedFlashWrite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_ParaUpdate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCmdAck
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[46]"></a>DoWriteReg</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, cmdprocess.o(i.DoWriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DoWriteReg &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_UpdateReg
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[44]"></a>FillCmdAck</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, cmdprocess.o(i.FillCmdAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FillCmdAck
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWriteReg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoWritePara
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadReg
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoReadPara
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdExec
</UL>

<P><STRONG><a name="[3e]"></a>CheckChirpIndex</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dataprocess.o(i.CheckChirpIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CheckChirpIndex &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataIndexError
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[62]"></a>DataCopy</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, dataprocess.o(i.DataCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DataCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[64]"></a>DataParse</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, dataprocess.o(i.DataParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateTail3Parse
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateIndex2Parse
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateIndex1Parse
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateIdParse
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCopy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[6e]"></a>DataProcess</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, dataprocess.o(i.DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DataProcess &rArr; DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataReceived
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataIndexError
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Reload
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAlgorithm
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChirpIndex
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_InCmdMode
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Recv
</UL>

<P><STRONG><a name="[65]"></a>DataStateIdParse</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dataprocess.o(i.DataStateIdParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DataStateIdParse
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[66]"></a>DataStateIndex1Parse</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dataprocess.o(i.DataStateIndex1Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DataStateIndex1Parse
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[67]"></a>DataStateIndex2Parse</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dataprocess.o(i.DataStateIndex2Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DataStateIndex2Parse
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[68]"></a>DataStateTail3Parse</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dataprocess.o(i.DataStateTail3Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[6a]"></a>GetRadarPara</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dataprocess.o(i.GetRadarPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetRawPoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetOneFrameChirpNum
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetFftPoint
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDfftPeakSize
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDataType
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_NeedReconfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
</UL>

<P><STRONG><a name="[30]"></a>GetDfftPeakData</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, abd.o(i.GetDfftPeakData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetDfftPeakData
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[7d]"></a>DumpChipRegValue</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, radar.o(i.DumpChipRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DumpChipRegValue &rArr; I2C_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[bd]"></a>ReplaceSpecialRegs</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, radar.o(i.ReplaceSpecialRegs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReplaceSpecialRegs
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[cc]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, mm32_systick.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_Init
</UL>

<P><STRONG><a name="[c0]"></a>SPI1_GPIO_SlaveInit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, mm32_spi.o(i.SPI1_GPIO_SlaveInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SPI1_GPIO_SlaveInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[cf]"></a>SetSysClockTo48_HSI</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, system_mm32f0010.o(i.SetSysClockTo48_HSI))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e4]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[e6]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e5]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
