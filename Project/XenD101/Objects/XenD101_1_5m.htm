<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\XenD101_1_5m.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\XenD101_1_5m.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Mon Oct 10 14:16:21 2022
<BR><P>
<H3>Maximum Stack Usage =        320 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; DataProc_Recv &rArr; DataProcess &rArr; DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC_COMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_COMP_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from py32_it.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from py32_it.o(i.EXTI4_15_IRQHandler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from py32_it.o(i.HardFault_Handler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[1e]">LED_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[1d]">LPUART_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from py32_it.o(i.NMI_Handler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from py32_it.o(i.PendSV_Handler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from py32_it.o(i.SPI1_IRQHandler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[1a]">SPI2_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[22]">SPI_DMAAbortOnError</a> from py32f003_hal_spi.o(i.SPI_DMAAbortOnError) referenced from py32f003_hal_spi.o(i.HAL_SPI_IRQHandler)
 <LI><a href="#[25]">SPI_DMAError</a> from py32f003_hal_spi.o(i.SPI_DMAError) referenced from py32f003_hal_spi.o(i.HAL_SPI_Receive_DMA)
 <LI><a href="#[25]">SPI_DMAError</a> from py32f003_hal_spi.o(i.SPI_DMAError) referenced from py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[23]">SPI_DMAHalfReceiveCplt</a> from py32f003_hal_spi.o(i.SPI_DMAHalfReceiveCplt) referenced from py32f003_hal_spi.o(i.HAL_SPI_Receive_DMA)
 <LI><a href="#[23]">SPI_DMAHalfReceiveCplt</a> from py32f003_hal_spi.o(i.SPI_DMAHalfReceiveCplt) referenced from py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[26]">SPI_DMAHalfTransmitReceiveCplt</a> from py32f003_hal_spi.o(i.SPI_DMAHalfTransmitReceiveCplt) referenced from py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[24]">SPI_DMAReceiveCplt</a> from py32f003_hal_spi.o(i.SPI_DMAReceiveCplt) referenced from py32f003_hal_spi.o(i.HAL_SPI_Receive_DMA)
 <LI><a href="#[24]">SPI_DMAReceiveCplt</a> from py32f003_hal_spi.o(i.SPI_DMAReceiveCplt) referenced from py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[27]">SPI_DMATransmitReceiveCplt</a> from py32f003_hal_spi.o(i.SPI_DMATransmitReceiveCplt) referenced from py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
 <LI><a href="#[3]">SVC_Handler</a> from py32_it.o(i.SVC_Handler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from py32_it.o(i.SysTick_Handler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_py32f003.o(i.SystemInit) referenced from startup_py32f003.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[16]">TIM16_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[17]">TIM17_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[14]">TIM6_LPTIM_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[1b]">USART1_IRQHandler</a> from py32_it.o(i.USART1_IRQHandler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[1c]">USART2_IRQHandler</a> from py32_it.o(i.USART2_IRQHandler) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_py32f003.o(.text) referenced from startup_py32f003.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_py32f003.o(.text)
 <LI><a href="#[28]">fputc</a> from py32_uart.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[39]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ad]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ae]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[af]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>LED_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>LPUART_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM6_LPTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataReceived
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChirpIndex
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCopy
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDfftPeakData
</UL>

<P><STRONG><a name="[b8]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ba]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2f]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[bb]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[bc]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[bd]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>ABD_HumanPresenceSensing</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, abd.o(i.ABD_HumanPresenceSensing))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ABD_HumanPresenceSensing &rArr; GetRangeByCenterGravity &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOn
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOff
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lsp
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRangeByCenterGravity
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDfftPeakData
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[42]"></a>ABD_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, abd.o(i.ABD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ABD_Init &rArr; TspiIoInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TspiIoInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOff
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>CmdProc_AdcReset</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dataprocess.o(i.CmdProc_AdcReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CmdProc_AdcReset &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateTail3Parse
</UL>

<P><STRONG><a name="[4b]"></a>ConfigDfftPeakPara</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, radar.o(i.ConfigDfftPeakPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ConfigDfftPeakPara &rArr; I2C_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, py32_it.o(i.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel2_3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DataProc_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, dataprocess.o(i.DataProc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DataProc_Init &rArr; GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>DataProc_Recv</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, dataprocess.o(i.DataProc_Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = DataProc_Recv &rArr; DataProcess &rArr; DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>Delay</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, platform.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32_it.o(i.EXTI4_15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>GetRangeByCenterGravity</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, abd.o(i.GetRangeByCenterGravity))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GetRangeByCenterGravity &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[81]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, py32f003_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[4c]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, py32f003_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>HAL_DMA_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, py32f003_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[68]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, py32f003_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_DMA
</UL>

<P><STRONG><a name="[5d]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, py32f003_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[77]"></a>HAL_GPIO_Init</STRONG> (Thumb, 266 bytes, Stack size 20 bytes, py32f003_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TspiIoInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutInit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[94]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f003_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOn
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoOutOff
</UL>

<P><STRONG><a name="[6a]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f003_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[6b]"></a>HAL_I2C_Init</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, py32f003_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[6e]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, py32f003_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>

<P><STRONG><a name="[72]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, py32f003_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>

<P><STRONG><a name="[6c]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, py32_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[78]"></a>HAL_IWDG_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, py32f003_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[92]"></a>HAL_IWDG_Refresh</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, py32f003_hal_iwdg.o(i.HAL_IWDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Reload
</UL>

<P><STRONG><a name="[a6]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f003_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[79]"></a>HAL_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, py32f003_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[7a]"></a>HAL_InitTick</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, py32f003_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[7b]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f003_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[84]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32f003_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[7d]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32f003_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[6d]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, py32f003_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[7f]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, py32_spi.o(i.HAL_SPI_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SPI_ErrorCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAAbortOnError
</UL>

<P><STRONG><a name="[80]"></a>HAL_SPI_IRQHandler</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, py32f003_hal_spi.o(i.HAL_SPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SPI_IRQHandler &rArr; HAL_SPI_ErrorCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>HAL_SPI_Init</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, py32f003_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_DMA_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[83]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 294 bytes, Stack size 48 bytes, py32_spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_DMA_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[85]"></a>HAL_SPI_Receive_DMA</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, py32f003_hal_spi.o(i.HAL_SPI_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
</UL>

<P><STRONG><a name="[87]"></a>HAL_SPI_RxCpltCallback</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, py32_spi.o(i.HAL_SPI_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_SPI_RxCpltCallback &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
</UL>

<P><STRONG><a name="[9e]"></a>HAL_SPI_RxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f003_hal_spi.o(i.HAL_SPI_RxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfReceiveCplt
</UL>

<P><STRONG><a name="[86]"></a>HAL_SPI_TransmitReceive_DMA</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
</UL>

<P><STRONG><a name="[a2]"></a>HAL_SPI_TxRxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f003_hal_spi.o(i.HAL_SPI_TxRxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
</UL>

<P><STRONG><a name="[9f]"></a>HAL_SPI_TxRxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f003_hal_spi.o(i.HAL_SPI_TxRxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitReceiveCplt
</UL>

<P><STRONG><a name="[a5]"></a>HAL_SYSCFG_DMA_Req</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, py32f003_hal.o(i.HAL_SYSCFG_DMA_Req))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[7c]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, py32f003_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[88]"></a>HAL_UART_Init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, py32f003_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[89]"></a>HAL_UART_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f003_hal_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[8c]"></a>HAL_UART_Transmit</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, py32f003_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>I2C_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, py32_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = I2C_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[4a]"></a>I2C_Read</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, py32_i2c.o(i.I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DumpChipRegValue
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetRawPoint
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetOneFrameChirpNum
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetFftPoint
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDfftPeakSize
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDataType
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
</UL>

<P><STRONG><a name="[49]"></a>I2C_Write</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, py32_i2c.o(i.I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = I2C_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterNormalMode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDfftPeakPara
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_PreInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[91]"></a>IWDG_Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, py32_iwdg.o(i.IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IWDG_Init &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[5b]"></a>IWDG_Reload</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, py32_iwdg.o(i.IWDG_Reload))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IWDG_Reload &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[46]"></a>Indicator_RadarDataIndexError</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, platform.o(i.Indicator_RadarDataIndexError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Indicator_RadarDataIndexError
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChirpIndex
</UL>

<P><STRONG><a name="[5c]"></a>Indicator_RadarDataReceived</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, platform.o(i.Indicator_RadarDataReceived))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Indicator_RadarDataReceived &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[43]"></a>IoOutInit</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, py32_gpio.o(i.IoOutInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IoOutInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
</UL>

<P><STRONG><a name="[41]"></a>IoOutOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, py32_gpio.o(i.IoOutOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IoOutOff
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
</UL>

<P><STRONG><a name="[40]"></a>IoOutOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, py32_gpio.o(i.IoOutOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IoOutOn
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[97]"></a>LED_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_gpio.o(i.LED_Init))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[9d]"></a>LED_On</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_gpio.o(i.LED_On))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
</UL>

<P><STRONG><a name="[93]"></a>LED_Toggle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_gpio.o(i.LED_Toggle))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataReceived
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataIndexError
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>Platform_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, platform.o(i.Platform_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Platform_Init &rArr; I2C_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>Radar_EnterNormalMode</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, radar.o(i.Radar_EnterNormalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Radar_EnterNormalMode &rArr; I2C_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[60]"></a>Radar_GetDataType</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, radar.o(i.Radar_GetDataType))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Radar_GetDataType &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[63]"></a>Radar_GetDfftPeakSize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, radar.o(i.Radar_GetDfftPeakSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Radar_GetDfftPeakSize &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[62]"></a>Radar_GetFftPoint</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, radar.o(i.Radar_GetFftPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Radar_GetFftPoint &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[64]"></a>Radar_GetOneFrameChirpNum</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, radar.o(i.Radar_GetOneFrameChirpNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Radar_GetOneFrameChirpNum &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[61]"></a>Radar_GetRawPoint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, radar.o(i.Radar_GetRawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Radar_GetRawPoint &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
</UL>

<P><STRONG><a name="[9a]"></a>Radar_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, radar.o(i.Radar_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Radar_Init &rArr; DumpChipRegValue &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_EnterNormalMode
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigDfftPeakPara
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceSpecialRegs
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DumpChipRegValue
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>Radar_PreInit</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, radar.o(i.Radar_PreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Radar_PreInit &rArr; I2C_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>RunFailed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, utilities.o(i.RunFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RunFailed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
</UL>

<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, py32_it.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI1_IRQHandler &rArr; HAL_SPI_IRQHandler &rArr; HAL_SPI_ErrorCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SPI_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, py32_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SPI_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_DMA_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSCFG_DMA_Req
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_py32f003.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system_py32f003.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>TspiIoInit</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, py32_gpio.o(i.TspiIoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TspiIoInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
</UL>

<P><STRONG><a name="[a7]"></a>UART1_GPIO_Init</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, py32_uart.o(i.UART1_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART1_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[8b]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, py32f003_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[98]"></a>UART_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, py32_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[1b]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_it.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32_it.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c0]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[3e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DumpChipRegValue
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunFailed
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Reload
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRadarPara
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>

<P><STRONG><a name="[50]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dataprocess.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[c1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[28]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, py32_uart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[3f]"></a>lsp</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, abd.o(i.lsp))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = main &rArr; DataProc_Recv &rArr; DataProcess &rArr; DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_PreInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Recv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[45]"></a>CheckChirpIndex</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dataprocess.o(i.CheckChirpIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CheckChirpIndex &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataIndexError
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[4d]"></a>DataCopy</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, dataprocess.o(i.DataCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DataCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[4f]"></a>DataParse</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, dataprocess.o(i.DataParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateTail3Parse
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateIndex2Parse
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateIndex1Parse
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStateIdParse
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcess
</UL>

<P><STRONG><a name="[5a]"></a>DataProcess</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, dataprocess.o(i.DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DataProcess &rArr; DataParse &rArr; DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataReceived
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Indicator_RadarDataIndexError
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Reload
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChirpIndex
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Recv
</UL>

<P><STRONG><a name="[51]"></a>DataStateIdParse</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, dataprocess.o(i.DataStateIdParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DataStateIdParse
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[52]"></a>DataStateIndex1Parse</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dataprocess.o(i.DataStateIndex1Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DataStateIndex1Parse
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[53]"></a>DataStateIndex2Parse</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dataprocess.o(i.DataStateIndex2Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DataStateIndex2Parse
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[54]"></a>DataStateTail3Parse</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, dataprocess.o(i.DataStateTail3Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = DataStateTail3Parse &rArr; CmdProc_AdcReset &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProc_AdcReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParse
</UL>

<P><STRONG><a name="[56]"></a>GetRadarPara</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dataprocess.o(i.GetRadarPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GetRadarPara &rArr; Radar_GetDataType &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetRawPoint
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetOneFrameChirpNum
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetFftPoint
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDfftPeakSize
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_GetDataType
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProc_Init
</UL>

<P><STRONG><a name="[3b]"></a>GetDfftPeakData</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, abd.o(i.GetDfftPeakData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetDfftPeakData
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABD_HumanPresenceSensing
</UL>

<P><STRONG><a name="[5e]"></a>DumpChipRegValue</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, radar.o(i.DumpChipRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = DumpChipRegValue &rArr; I2C_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[9b]"></a>ReplaceSpecialRegs</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, radar.o(i.ReplaceSpecialRegs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReplaceSpecialRegs
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Radar_Init
</UL>

<P><STRONG><a name="[7e]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, py32f003_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[69]"></a>DMA_SetConfig</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, py32f003_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[90]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, py32f003_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
</UL>

<P><STRONG><a name="[70]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, py32f003_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[73]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, py32f003_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[75]"></a>I2C_WaitOnBTFFlagUntilTimeout</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, py32f003_hal_i2c.o(i.I2C_WaitOnBTFFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnBTFFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[6f]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, py32f003_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[8f]"></a>I2C_WaitOnMasterAddressFlagUntilTimeout</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, py32f003_hal_i2c.o(i.I2C_WaitOnMasterAddressFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[71]"></a>I2C_WaitOnRXNEFlagUntilTimeout</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, py32f003_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnRXNEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[74]"></a>I2C_WaitOnTXEFlagUntilTimeout</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, py32f003_hal_i2c.o(i.I2C_WaitOnTXEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnTXEFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[22]"></a>SPI_DMAAbortOnError</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, py32f003_hal_spi.o(i.SPI_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_DMAAbortOnError &rArr; HAL_SPI_ErrorCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> py32f003_hal_spi.o(i.HAL_SPI_IRQHandler)
</UL>
<P><STRONG><a name="[25]"></a>SPI_DMAError</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, py32f003_hal_spi.o(i.SPI_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_DMAError &rArr; HAL_SPI_ErrorCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> py32f003_hal_spi.o(i.HAL_SPI_Receive_DMA)
<LI> py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[23]"></a>SPI_DMAHalfReceiveCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, py32f003_hal_spi.o(i.SPI_DMAHalfReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAHalfReceiveCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> py32f003_hal_spi.o(i.HAL_SPI_Receive_DMA)
<LI> py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[26]"></a>SPI_DMAHalfTransmitReceiveCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, py32f003_hal_spi.o(i.SPI_DMAHalfTransmitReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAHalfTransmitReceiveCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[24]"></a>SPI_DMAReceiveCplt</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, py32f003_hal_spi.o(i.SPI_DMAReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SPI_DMAReceiveCplt &rArr; HAL_SPI_RxCpltCallback &rArr; HAL_SPI_Receive_DMA &rArr; HAL_SPI_TransmitReceive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>
<BR>[Address Reference Count : 2]<UL><LI> py32f003_hal_spi.o(i.HAL_SPI_Receive_DMA)
<LI> py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[27]"></a>SPI_DMATransmitReceiveCplt</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, py32f003_hal_spi.o(i.SPI_DMATransmitReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_DMATransmitReceiveCplt &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> py32f003_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA)
</UL>
<P><STRONG><a name="[a0]"></a>SPI_EndRxTransaction</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, py32f003_hal_spi.o(i.SPI_EndRxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_EndRxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
</UL>

<P><STRONG><a name="[a1]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, py32f003_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
</UL>

<P><STRONG><a name="[a4]"></a>SPI_WaitFifoStateUntilTimeout</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, py32f003_hal_spi.o(i.SPI_WaitFifoStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>

<P><STRONG><a name="[a3]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, py32f003_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTransaction
</UL>

<P><STRONG><a name="[8a]"></a>UART_SetConfig</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, py32f003_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[8d]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, py32f003_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[a9]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[ab]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[aa]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
